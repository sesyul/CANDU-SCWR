*Deck MainDragonSCWR2D normal version
*--------------------
* Nom          : CalculSCWR64.x2m
* Utilisation  : Procedure de création de la cellule de CANDU SCWR 
*                64 crayons
* Auteur       : U. Le Tennier 
* Date         : 07/06/2019
* Modifie      : /
*
*---------------------------
* DECRIPTION DU PROGRAMME
* Realisation des geometries, tracking et bibliotheque de sections eff
* Realisation du calcul de flux et boucle d evolution avec sortie d une multicompo 
* 64 crayons de combustible
*
* PROCEDURES
* SCWR64Geor6  : Definition de la geometrie 
* SCWR64Libc6  : Creation de bibli de sections efficaces
* SCWR64Evoc6  : Calcul de flux, evolution et multicompo
*
* FICHIERS ECHANGES 
* GeoAutoPro    : Geometrie pour calcul autoprotection
* GeoFlux       : Geometrie pour le calcul de flux
* VolumAutoPro  : Fichier de tracking pour l autoprotection
* LignAutoPro   : Lignes d integration pour autoprotection
* VolumFlux     : Fichier de tracking pour le flux
* LignFlux      : Lignes d integration pour flux
* BiblioInt     : Biliotheque interne requise pour les calculs
* Editing2      : Sortie de EDI: pour produire la multicompo
* ConcIso       : Concentration isotopique en fonction du temps (sortie de EVO:)
* dbXXX         : Multicompo pour chaque Enrichissement
* dbRef        : Base de donnee pour reflecteur 
*
* REELS ET ENTIERS 
*
* ITERATION    : Enrichissement considere (valeurs de 1 à 3)
* 1 = bottom 0-3m
* 2 = middle 3-4m
* 3 = top    4-5m
* ITERATIONref : Valeur comparee a ITERATION pour changer la valeur de BINAIRE 
*
* TempsFin    : Date a laquelle le calcul d evolution doit s arreter  (jours)
* Puissance   : Puissance du reacteur pour un cycle de 405 jours      (kW/kg)
*
* TempCaloUp   : Temperature du caloporteur qui remonte               (K)
* TempCaloDw   : Temperature du caloporteur qui descend               (K)
* DensCaloUp   : Densite du caloporteur qui remonte                   (g/cm3)
* DensCaloDw   : Densite du caloporteur qui descend (quasi constante) (g/cm3)
* TempFuel     : Temperature combustible                              (K)
* TempLiner    : Temperature liner (une Temp unique pour tous)        (K)
* TempTubFrc   : Temperature tube de force                            (K)
* TempGaine    : Temperature gaine                                    (K)
* TempIsol     : Temperature de l isolant                             (K)
*olala
* 
*---------------------------------------------------------------
* Definition des modules, procédures et structures de données
*---------------------------------------------------------------
MODULE        DELETE: NXT: PSP: FMT: END:                     ;
PROCEDURE     SCWR64Libc6C SCWR64Evoc6C SCWR64Geor6C   
              SCWR64SGeo                                      ;
LINKED_LIST   GeoAutoPA                                       ;
LINKED_LIST   GeoAutoPB                                       ;
LINKED_LIST   GeoAutoPC                                       ;
LINKED_LIST   GeoFluS                                         ;
LINKED_LIST   VolumAutoPA VolumFlA                            ;
LINKED_LIST   VolumAutoPB VolumFlB                            ;
LINKED_LIST   VolumAutoPC VolumFlC                            ;
LINKED_LIST   VolumFluS                                       ;
LINKED_LIST   ConcIso                                         ;
LINKED_LIST   BiblioInt                                       ;
SEQ_ASCII     dbRef1          :: FILE './dbRef1'              ; 
SEQ_ASCII     dbRef2          :: FILE './dbRef2'              ;                                           
SEQ_ASCII     dbBotCor        :: FILE './dbBotCor'            ;                                        
SEQ_ASCII     dbBotCorn       :: FILE './dbBotCorn'           ;                                       
SEQ_ASCII     dbBotSid1       :: FILE './dbBotSid1'           ;                                        
SEQ_ASCII     dbBotSid2       :: FILE './dbBotSid2'           ;                                       
SEQ_ASCII     dbMidCor        :: FILE './dbMidCor'            ;                                        
SEQ_ASCII     dbMidCorn       :: FILE './dbMidCorn'           ;                                        
SEQ_ASCII     dbMidSid1       :: FILE './dbMidSid1'           ;                                       
SEQ_ASCII     dbMidSid2       :: FILE './dbMidSid2'           ;                                      
SEQ_ASCII     dbTopCor        :: FILE './dbTopCor'            ;                                        
SEQ_ASCII     dbTopCorn       :: FILE './dbTopCorn'           ;                                        
SEQ_ASCII     dbTopSid1       :: FILE './dbTopSid1'           ;                                       
SEQ_ASCII     dbTopSid2       :: FILE './dbTopSid2'           ;
SEQ_ASCII     Edit03          :: FILE './03.edi'              ;
SEQ_ASCII     Edit34          :: FILE './34.edi'              ;
SEQ_ASCII     Edit45          :: FILE './45.edi'              ;
SEQ_ASCII     ConcIso03       :: FILE './03.con'              ;
SEQ_ASCII     ConcIso34       :: FILE './34.con'              ;
SEQ_ASCII     ConcIso45       :: FILE './45.con'              ;
SEQ_ASCII     GeoA.eps        :: FILE './GeoA.eps'            ;
SEQ_ASCII     GeoF.eps        :: FILE './GeoF.eps'            ;

SEQ_BINARY    LignAutoPA                                      ;
SEQ_BINARY    LignAutoPB                                      ;
SEQ_BINARY    LignAutoPC                                      ;
SEQ_BINARY    LignFluS                                        ;

INTEGER       ITERATION       := 1                            ;
INTEGER       ITERATIONref    := 1                            ;
INTEGER       Maillage        := 172                          ;

REAL          TempsFin        := 1710.                        ;

REAL          Puissance     :=  57.61                         ;
REAL          TempCaloUp    :=  671.10                        ;
REAL          TempCaloDw    :=  634.62625                     ; 
REAL          DensCaloUp    :=    0.2624                      ; 
REAL          DensCaloDw    :=    0.584373                    ;
REAL          DensMod       :=    1.0851                      ;
REAL          TempFuel      := 1056.26                        ;
REAL          TempMod       :=  342.16                        ;
REAL          TempLiner     :=  663.30                        ;
REAL          TempTubFrc    :=  414.94                        ;
REAL          TempGaine     :=  723.22                        ;
REAL          TempIsol      :=  551.80                        ;

REAL          ConcBore      :=  0.0001                        ;
STRING        LoadModel     :=  "3c" ; ! "4c"
STRING        Opt           :=  "Side" ; ! "Corn"    

*---------------------------------------------------------------
* Note GM
* Definition des geometries (une seule fois)
*---------------------------------------------------------------
GeoAutoPA  GeoAutoPB  GeoAutoPC 
                := SCWR64Geor6C ;

*---------------------------------------------------------------
* Definition des geometries a analyser
*---------------------------------------------------------------
VolumAutoPA LignAutoPA := NXT: GeoAutoPA :: EDIT 2 TISO 9 75.0 ;
VolumAutoPB LignAutoPB := NXT: GeoAutoPB :: EDIT 2 TISO 9 75.0 ;
VolumAutoPC LignAutoPC := NXT: GeoAutoPC :: EDIT 2 TISO 9 75.0 ;

GeoFluS := SCWR64SGeo ;

VolumFluS LignFluS := NXT: GeoFluS :: EDIT 2 TISO 9 75.0 ;

GeoAutoPA GeoAutoPB GeoAutoPC GeoFluS
:= DELETE: 
GeoAutoPA GeoAutoPB GeoAutoPC GeoFluS ;


GeoA.eps := PSP: VolumAutoPA :: FILL RGB TYPE MIXTURE ;
GeoF.eps := PSP: VolumFluS   :: FILL RGB TYPE MIXTURE ;

*---------------------------------------------------------------
* Debut de boucle while 
*---------------------------------------------------------------
WHILE ITERATION ITERATIONref <= DO


*---------------------------------------------------------------
* Creation des figures et images de la geometrie + changement des parametres physiques
*---------------------------------------------------------------
IF ITERATION 2 = THEN 

    EVALUATE  TempCaloUp    :=  772.14                     ;
    EVALUATE  TempCaloDw    :=  630.3776                   ;
    EVALUATE  DensCaloUp    :=    0.09515                  ;
    EVALUATE  DensCaloDw    :=    0.600204                 ;
    EVALUATE  TempFuel      := 1319.40                     ;
    EVALUATE  TempLiner     :=  752.53                     ;
    EVALUATE  TempTubFrc    :=  432.02                     ;
    EVALUATE  TempGaine     :=  905.87                     ;
    EVALUATE  TempIsol      :=  607.13                     ;

ELSEIF ITERATION 3 = THEN

    EVALUATE  TempCaloUp    :=  858.85                     ;
    EVALUATE  TempCaloDw    :=  626.9835                   ;
    EVALUATE  DensCaloUp    :=    0.073707                 ;
    EVALUATE  DensCaloDw    :=    0.612943                 ;
    EVALUATE  DensMod       :=    1.0851                   ;
    EVALUATE  TempFuel      := 1429.44                     ;
    EVALUATE  TempLiner     :=  830.97                     ;
    EVALUATE  TempTubFrc    :=  447.55                     ;
    EVALUATE  TempGaine     := 1002.23                     ;
    EVALUATE  TempIsol      :=  655.61                     ;

ENDIF                                                      ;

*---------------------------------------------------------------
* Creation de bibliotheque interne
*---------------------------------------------------------------
 BiblioInt := SCWR64Libc6C :: <<ITERATION>>
                              <<TempCaloUp>> <<TempCaloDw>> 
                              <<DensCaloUp>> <<DensCaloDw>>
                              <<TempFuel>>   <<TempLiner>>   
                              <<TempTubFrc>> <<TempMod>>
                              <<TempGaine>>  <<TempIsol>>   
                              <<DensMod>>    <<ConcBore>>   
                              <<Maillage>>                   ;

*---------------
* Calcul de flux et d evolution
*---------------
IF     ITERATION 1 = THEN 

dbBotCor dbBotCorn dbBotSid1 dbBotSid2 dbRef1 dbRef2  ConcIso 
:= SCWR64Evoc6C 
VolumAutoPA VolumAutoPB VolumAutoPC  VolumFluS BiblioInt  
LignAutoPA  LignAutoPB  LignAutoPC LignFluS 
:: <<Puissance>> <<ITERATION>> 
   <<TempsFin>> <<DensCaloUp>>   
   <<DensCaloDw>> <<DensMod>> <<ConcBore>> <<TempFuel>>
   <<TempMod>> <<TempCaloUp>> <<TempCaloDw>> <<LoadModel>> 
   <<Opt>> ;

ConcIso03 := ConcIso ;

ELSEIF ITERATION 2 = THEN

dbMidCor dbMidCorn dbMidSid1 dbMidSid2 dbRef1 dbRef2  ConcIso  
:= SCWR64Evoc6C 
VolumAutoPA VolumAutoPB VolumAutoPC  VolumFluS BiblioInt  
LignAutoPA  LignAutoPB  LignAutoPC LignFluS 
:: <<Puissance>> <<ITERATION>> 
   <<TempsFin>> <<DensCaloUp>> 
   <<DensCaloDw>> <<DensMod>> <<ConcBore>> <<TempFuel>> 
   <<TempMod>> <<TempCaloUp>> <<TempCaloDw>> <<LoadModel>>
   <<Opt>> ;

ConcIso34 := ConcIso ;

ELSE 

dbTopCor dbTopCorn dbTopSid1 dbTopSid2 dbRef1 dbRef2  ConcIso  
:= SCWR64Evoc6C 
VolumAutoPA VolumAutoPB VolumAutoPC  VolumFluS BiblioInt  
LignAutoPA  LignAutoPB  LignAutoPC LignFluS 
:: <<Puissance>> <<ITERATION>> 
   <<TempsFin>> <<DensCaloUp>> 
   <<DensCaloDw>> <<DensMod>>  <<ConcBore>> <<TempFuel>> 
   <<TempMod>> <<TempCaloUp>> <<TempCaloDw>> <<LoadModel>>
   <<Opt>> ;

ConcIso45 := ConcIso ;

ENDIF                                                      ; 


*---------------
* Nettoyage pour pouvoir faire l enrichissement suivant 
*---------------
BiblioInt              := DELETE: BiblioInt                ;
ConcIso                := DELETE: ConcIso                  ;

*---------------------------------------------------------------
* Fin de boucle while 
*---------------------------------------------------------------
EVALUATE ITERATION := ITERATION 1 +                        ;

ENDWHILE                                                   ;

LignAutoPA LignAutoPB LignAutoPC LignFluS 
:= DELETE: 
LignAutoPA LignAutoPB LignAutoPC LignFluS ;
VolumAutoPA VolumAutoPB VolumAutoPC VolumFluS 
:= DELETE: 
VolumAutoPA VolumAutoPB VolumAutoPC VolumFluS ;



END: ;
QUIT "LIST" .